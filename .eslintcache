[{"/home/naveed/development/react-routers/src/index.js":"1","/home/naveed/development/react-routers/src/App.js":"2","/home/naveed/development/react-routers/src/components/Home/Home.js":"3","/home/naveed/development/react-routers/src/components/About/About.js":"4","/home/naveed/development/react-routers/src/components/NotAuthorized/NotAuthorized.js":"5","/home/naveed/development/react-routers/src/components/PrivateRoute/PrivateRoute.js":"6","/home/naveed/development/react-routers/src/components/SignIn/SignIn.js":"7","/home/naveed/development/react-routers/src/components/Students/Students.js":"8","/home/naveed/development/react-routers/src/components/Error404/Error404.js":"9","/home/naveed/development/react-routers/src/components/StudentDetails/StudentDetails.js":"10","/home/naveed/development/react-routers/src/components/Signup/Signup.js":"11"},{"size":741,"mtime":1612528171237,"results":"12","hashOfConfig":"13"},{"size":10275,"mtime":1612622771994,"results":"14","hashOfConfig":"13"},{"size":197,"mtime":1611522903186,"results":"15","hashOfConfig":"13"},{"size":127,"mtime":1611495666840,"results":"16","hashOfConfig":"13"},{"size":209,"mtime":1611496102535,"results":"17","hashOfConfig":"13"},{"size":577,"mtime":1612543392602,"results":"18","hashOfConfig":"13"},{"size":3919,"mtime":1612589120814,"results":"19","hashOfConfig":"13"},{"size":2225,"mtime":1612589154931,"results":"20","hashOfConfig":"13"},{"size":181,"mtime":1611496094735,"results":"21","hashOfConfig":"13"},{"size":3543,"mtime":1612622611400,"results":"22","hashOfConfig":"13"},{"size":3617,"mtime":1612540607709,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"7mdklk",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/naveed/development/react-routers/src/index.js",[],["48","49"],"/home/naveed/development/react-routers/src/App.js",["50"],"import { useState, useEffect } from \"react\";\nimport { makeStyles, AppBar, Toolbar, Button, Grid } from \"@material-ui/core\";\nimport { Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport \"fontsource-roboto\";\nimport Home from \"./components/Home/Home\";\nimport SignIn from \"./components/SignIn/SignIn\";\nimport Signup from \"./components/Signup/Signup\";\nimport About from \"./components/About/About\";\nimport Students from \"./components/Students/Students\";\nimport StudentDetails from \"./components/StudentDetails/StudentDetails\";\nimport PrivateRoute from \"./components/PrivateRoute/PrivateRoute\";\nimport NotAuthorized from \"./components/NotAuthorized/NotAuthorized\";\nimport Error404 from \"./components/Error404/Error404\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\">\n      {\"Copyright Â© \"}\n      <Link to=\"/\" color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\",\n  },\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: \"auto\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[800],\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  let history = useHistory();\n\n  // flag to show edit form\n  const [editing, setEditing] = useState(false);\n\n  const editRow = (student) => {\n    setStudentEditProfileData({\n      id: student.id,\n      firstName: student.firstName,\n      lastName: student.lastName,\n      email: student.email,\n      password: student.password,\n    });\n\n    setEditing(true);\n\n    history.push(\"/student/\" + student.id);\n  };\n\n  const deleteUser = (id) => {\n    setEditing(false);\n\n    setStudentList(studentList.filter((student) => student.id !== id));\n  };\n\n  // signin form data\n  const [loginData, setLoginData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  // profile form data (regisration and update student functionality)\n  const [signupProfileData, setSignupProfileData] = useState({\n    id: uuidv4(),\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  // boolean value to store signin flag\n  const [loggedin, setLoggedIn] = useState(\n    localStorage.getItem(\"loggedinAccount\") != null\n  );\n\n  // name of loggedin user to be displayed on the navbar menue\n  const [name, setName] = useState();\n\n  // profile form data (regisration and update student functionality)\n  const [studentProfileData, setStudentEditProfileData] = useState({\n    id: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  let [studentList, setStudentList] = useState(\n    JSON.parse(localStorage.getItem(\"userData\"))\n  );\n\n  const onSignUpSubmit = (e, formData) => {\n    e.preventDefault();\n\n    // retrieve data form LocalStorage\n    const localStorateData = JSON.parse(localStorage.getItem(\"userData\"));\n\n    if (localStorateData) {\n      for (let i = 0; i < localStorateData.length; i++) {\n        if (formData.email === localStorateData[i].email) {\n          alert(\"Already registered on this email\");\n          document.getElementById(\"email\").focus();\n          setLoggedIn(false);\n          break;\n        }\n      }\n    }\n\n    alert(\"You have created an account!\");\n    const accounts = JSON.parse(localStorage.getItem(\"userData\")) || [];\n    accounts.push(formData);\n    localStorage.setItem(\"userData\", JSON.stringify(accounts));\n    localStorage.setItem(\"loggedinAccount\", JSON.stringify(formData));\n    // udpate student list state\n    setStudentList(accounts);\n    setName(formData.firstName);\n    setSignupProfileData({\n      id: uuidv4(),\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n    });\n    setLoggedIn(true);\n  };\n\n  const onStudentEditSubmit = (e, id, updatedStudent) => {\n    e.preventDefault();\n\n    studentList = studentList.map((student) =>\n      student.id === id ? updatedStudent : student\n    );\n\n    setStudentList(studentList);\n\n    localStorage.setItem(\"userData\", JSON.stringify(studentList));\n\n    setEditing(false);\n  };\n\n  const onSignInSubmit = (e, formData) => {\n    e.preventDefault();\n\n    // retrieve exising localstorate data\n    const localStorateData = JSON.parse(localStorage.getItem(\"userData\"));\n    let success = false;\n\n    if (localStorateData) {\n      for (let i = 0; i < localStorateData.length; i++) {\n        if (\n          formData.email === localStorateData[i].email &&\n          formData.password === localStorateData[i].password\n        ) {\n          setLoggedIn(true);\n          success = true;\n          localStorage.setItem(\n            \"loggedinAccount\",\n            JSON.stringify(localStorateData[i])\n          );\n          setName(localStorateData[i].firstName);\n          alert(\"You are loggedin\");\n          break;\n        }\n      }\n    }\n\n    if (!success) {\n      alert(\"Incorrect email or password\");\n      document.getElementById(\"email\").focus();\n      setLoggedIn(false);\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    if (!editing && studentProfileData.firstName) {\n      alert(\"You have edited the account\");\n\n      setStudentEditProfileData({\n        id: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n      });\n\n      setEditing(false);\n      history.push(\"/students\");\n    } else if (loggedin && signupProfileData.firstName) {\n      alert(\"You have creaated n account!\");\n      const accounts = JSON.parse(localStorage.getItem(\"userData\")) || [];\n      accounts.push(signupProfileData);\n      localStorage.setItem(\"userData\", JSON.stringify(accounts));\n      localStorage.setItem(\n        \"loggedinAccount\",\n        JSON.stringify(signupProfileData)\n      );\n      // udpate student list state\n      setStudentList(accounts);\n      setName(signupProfileData.firstName);\n      setSignupProfileData({\n        id: uuidv4(),\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n      });\n    } else if (loggedin && loginData.email) {\n      localStorage.setItem(\"loggedinAccount\", \"true\");\n      setLoginData({\n        email: \"\",\n        password: \"\",\n      });\n    }\n  }, [loggedin, editing]);\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Grid\n            justify=\"space-between\" // This will result in making second <Grid item> right aligned\n            container\n          >\n            <Grid item>\n              {\n                // left aligned\n              }\n              <Button color=\"inherit\">\n                <Link className=\"btns\" to=\"/\">\n                  Home\n                </Link>\n              </Button>\n              <Button color=\"inherit\">\n                <Link className=\"btns\" to=\"/about\">\n                  About\n                </Link>\n              </Button>\n              <Button color=\"inherit\">\n                <Link className=\"btns\" to=\"/students\">\n                  Students\n                </Link>\n              </Button>\n              {loggedin ? (\n                <Button id=\"name\" disabled>\n                  {name}'s account\n                </Button>\n              ) : null}\n            </Grid>\n\n            <Grid item>\n              {!loggedin ? (\n                <>\n                  <Button color=\"inherit\">\n                    <Link className=\"btns\" to=\"/signup\">\n                      Sign Up\n                    </Link>\n                  </Button>\n                  <Button color=\"inherit\">\n                    <Link className=\"btns\" to=\"/signin\">\n                      Log in\n                    </Link>\n                  </Button>\n                </>\n              ) : (\n                <Button\n                  color=\"inherit\"\n                  onClick={() => {\n                    setLoggedIn(false);\n                    setName(\"\");\n                    localStorage.removeItem(\"loggedinAccount\");\n                  }}\n                >\n                  Log out\n                </Button>\n              )}\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home name={name} />\n        </Route>\n        <PrivateRoute path=\"/about\" component={About} />\n\n        {\n          // https://stackoverflow.com/questions/49044052/pass-custom-data-to-privateroute-component-in-react\n        }\n        <PrivateRoute\n          exact\n          path=\"/students\"\n          component={Students}\n          studentList={studentList}\n          editRow={editRow}\n          deleteUser={deleteUser}\n        ></PrivateRoute>\n\n        <PrivateRoute\n          path=\"/student/:id\"\n          component={StudentDetails}\n          currentStudent={studentProfileData}\n          updateStudent={onStudentEditSubmit}\n        ></PrivateRoute>\n\n        <Route path=\"/signup\">\n          {!loggedin ? (\n            <Signup\n              currentProfile={signupProfileData}\n              onSignUpSubmit={onSignUpSubmit}\n            />\n          ) : (\n            <Redirect to=\"/\" />\n          )}\n        </Route>\n        <Route path=\"/signin\">\n          {!loggedin ? (\n            <SignIn initialFormData={loginData} onSubmit={onSignInSubmit} />\n          ) : (\n            <Redirect to=\"/\" />\n          )}\n        </Route>\n        {/* <Route component={NotAuthorized} /> */}\n        <Route path=\"/not-authorized\" component={NotAuthorized} />\n        {/* This is default route without path param. Everything non existing URL will be caught by this route */}\n        <Route component={Error404} />\n      </Switch>\n      <footer className={classes.footer}>\n        <Container maxWidth=\"sm\">\n          <Typography variant=\"body1\">\n            My sticky footer can be found here.\n          </Typography>\n          <Copyright />\n        </Container>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","/home/naveed/development/react-routers/src/components/Home/Home.js",[],"/home/naveed/development/react-routers/src/components/About/About.js",[],"/home/naveed/development/react-routers/src/components/NotAuthorized/NotAuthorized.js",[],"/home/naveed/development/react-routers/src/components/PrivateRoute/PrivateRoute.js",[],"/home/naveed/development/react-routers/src/components/SignIn/SignIn.js",[],"/home/naveed/development/react-routers/src/components/Students/Students.js",[],"/home/naveed/development/react-routers/src/components/Error404/Error404.js",[],"/home/naveed/development/react-routers/src/components/StudentDetails/StudentDetails.js",[],"/home/naveed/development/react-routers/src/components/Signup/Signup.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":240,"column":6,"nodeType":"57","endLine":240,"endColumn":25,"suggestions":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'loginData.email', 'signupProfileData', and 'studentProfileData.firstName'. Either include them or remove the dependency array.","ArrayExpression",["61"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},"Update the dependencies array to be: [loggedin, editing, studentProfileData.firstName, signupProfileData, loginData.email, history]",{"range":"64","text":"65"},[6596,6615],"[loggedin, editing, studentProfileData.firstName, signupProfileData, loginData.email, history]"]